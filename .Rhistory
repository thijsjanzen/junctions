mutate("dlaag" = Laag - lag(Laag)) %>%
mutate("dhoog" = Hoog - lag(Hoog)) %>%
mutate("hoog_laag" = dhoog / (dhoog + dlaag)) %>%
group_by(year) %>%
summarise("gem frac hoog" = mean(hoog_laag, na.rm=TRUE),
"min frac hoog" = min(hoog_laag, na.rm=TRUE),
"max frac hoog" = max(hoog_laag, na.rm=TRUE))
egg::ggarrange(p1, p3, p2, p4, ncol = 2)
vx %>%
group_by(year) %>%
summarise("gem_elektriciteit" = mean(Electriciteit, na.rm = T),
"gem_gas" = mean(Gas, na.rm = T))
library(tidyverse)
library(lubridate)
vx <- read.table("/Users/thijsjanzen/Dropbox/elektriciteits verbruik.txt",
header = TRUE)
vx <- as_tibble(vx)
xx <- vx$Date
xx <- lubridate::dmy(vx$Date)
xx <- xx %m-% months(1)
vx$month <- lubridate::month(xx)
vx$year <- lubridate::year(xx)
p1 <- ggplot(vx, aes(x = month, y = Electriciteit, col = as.factor(year))) +
geom_point() +
geom_line() +
ylim(0, 15) +
ggtitle("Electriciteit per dag") +
theme_classic() +
labs(col = "") +
scale_color_brewer()
p2 <- ggplot(vx, aes(x = month, y = Gas, col = as.factor(year))) +
geom_point() +
geom_line() +
ylim(0, 7) +
ggtitle("Gas per dag") +
labs(col = "") +
theme_classic() +
scale_color_brewer()
egg::ggarrange(p1, p2, ncol = 1)
p3 <- vx %>%
mutate("dlaag" = Laag - lag(Laag)) %>%
mutate("dhoog" = Hoog - lag(Hoog)) %>%
mutate("hoog_laag" = dhoog / (dhoog + dlaag)) %>%
ggplot(aes(x = month, y = hoog_laag, col = as.factor(year))) +
geom_point() +
ylab("hoog / (laag + hoog)") +
geom_line() +
#  ylim(0, 1) +
geom_abline(slope = 0, intercept = 0.5, lty = 2) +
scale_color_brewer() +
theme_classic() +
labs(col = "")
p4 <- vx %>%
group_by(year) %>%
summarise("gem_elektriciteit" = mean(Electriciteit, na.rm = T),
"gem_gas" = mean(Gas, na.rm = T)) %>%
gather(key = "maat", value = "hoeveelheid", -year) %>%
ggplot(aes(x = year, y = hoeveelheid, fill = as.factor(year))) +
geom_bar(stat = "identity") +
facet_wrap(~maat, scales = "free") +
scale_fill_brewer() +
theme(legend.position = "top") +
labs(fill = "") +
theme_classic()
vx %>%
mutate("dlaag" = Laag - lag(Laag)) %>%
mutate("dhoog" = Hoog - lag(Hoog)) %>%
mutate("hoog_laag" = dhoog / (dhoog + dlaag)) %>%
group_by(year) %>%
summarise("gem frac hoog" = mean(hoog_laag, na.rm=TRUE),
"min frac hoog" = min(hoog_laag, na.rm=TRUE),
"max frac hoog" = max(hoog_laag, na.rm=TRUE))
egg::ggarrange(p1, p3, p2, p4, ncol = 2)
vx %>%
group_by(year) %>%
summarise("gem_elektriciteit" = mean(Electriciteit, na.rm = T),
"gem_gas" = mean(Gas, na.rm = T))
vx <- vcfR::read.vcfR("/Users/thijsjanzen/MEGAsync2/Daphnia/gal_long_fixed_5.recode.vcf")
library(vcfR)
vx <- vcfR::read.vcfR("/Users/thijsjanzen/MEGAsync2/Daphnia/gal_long_fixed_5.recode.vcf")
chrom <- vcfR::create.chromR(vx, name = "dgal1")
plot(chrom)
chromoqc(chrom)
my_genind <- vcfR2genind(vx)
my_genind
my_genind@all.names
library(pegas)
install.packages("pegas")
vx <- pegas::read.vcf("/Users/thijsjanzen/MEGAsync2/Daphnia/gal_long_fixed_5.recode.vcf")
?pegas::read.vcf
vx
vx$.
?vcfloci
?pegas::VCFloci
vy <- pegas::VCFloci(file = "/Users/thijsjanzen/MEGAsync2/Daphnia/gal_long_fixed_5.recode.vcf")
vy
vy$FORMAT
vy$INFO
info <- vy
op <- par(mfcol = c(4, 1), xpd = TRUE)
lim <- c(2.65e6, 2.95e6)
## distribution of SNP and non-SNP mutations along the Y chr:
plot(info$POS, !SNP, "h", col = "red", main = "non-SNP mutations",
xlab = "Position", ylab = "", yaxt = "n")
rect(lim[1], -0.1, lim[2], 1.1, lwd = 2, lty = 2)
plot(info$POS, SNP, "h", col = "blue", main = "SNP mutations",
xlab = "Position", ylab = "", yaxt = "n")
rect(lim[1], -0.1, lim[2], 1.1, lwd = 2, lty = 2)
par(xpd = FALSE)
## same focusing on a smaller portion of the chromosome:
plot(info$POS, !SNP, "h", col = "red", xlim = lim, xlab = "Position",
ylab = "", yaxt = "n")
plot(info$POS, SNP, "h", col = "blue", xlim = lim, xlab = "Position",
ylab = "", yaxt = "n")
info$POS
SNP <- is.snp(info)
SNP <- pegas::is.snp(info)
op <- par(mfcol = c(4, 1), xpd = TRUE)
lim <- c(2.65e6, 2.95e6)
## distribution of SNP and non-SNP mutations along the Y chr:
plot(info$POS, !SNP, "h", col = "red", main = "non-SNP mutations",
xlab = "Position", ylab = "", yaxt = "n")
rect(lim[1], -0.1, lim[2], 1.1, lwd = 2, lty = 2)
plot(info$POS, SNP, "h", col = "blue", main = "SNP mutations",
xlab = "Position", ylab = "", yaxt = "n")
rect(lim[1], -0.1, lim[2], 1.1, lwd = 2, lty = 2)
par(xpd = FALSE)
## same focusing on a smaller portion of the chromosome:
plot(info$POS, !SNP, "h", col = "red", xlim = lim, xlab = "Position",
ylab = "", yaxt = "n")
plot(info$POS, SNP, "h", col = "blue", xlim = lim, xlab = "Position",
ylab = "", yaxt = "n")
par(op)
## read both types of mutations separately:
X.SNP <- read.vcf("chrY.vcf.gz", which.loci = which(SNP))
X.other <- read.vcf("chrY.vcf.gz", which.loci = which(!SNP))
identical(rownames(X.SNP), VCFlabels("chrY.vcf.gz")) # TRUE
cat(VCFheader("chrY.vcf.gz"))
## get haplotypes for the first 10 loci:
h <- haplotype(X.SNP, 1:10)
## plot their frequencies:
op <- par(mar = c(3, 10, 1, 1))
plot(h, horiz=TRUE, las = 1)
par(op)
SNP <- pegas::is.snp(info)
op <- par(mfcol = c(4, 1), xpd = TRUE)
lim <- c(0, 2.95e6)
## distribution of SNP and non-SNP mutations along the Y chr:
plot(info$POS, !SNP, "h", col = "red", main = "non-SNP mutations",
xlab = "Position", ylab = "", yaxt = "n")
par(mar=c(2,2,2,2))
## distribution of SNP and non-SNP mutations along the Y chr:
plot(info$POS, !SNP, "h", col = "red", main = "non-SNP mutations",
xlab = "Position", ylab = "", yaxt = "n")
rect(lim[1], -0.1, lim[2], 1.1, lwd = 2, lty = 2)
plot(info$POS, SNP, "h", col = "blue", main = "SNP mutations",
xlab = "Position", ylab = "", yaxt = "n")
rect(lim[1], -0.1, lim[2], 1.1, lwd = 2, lty = 2)
par(xpd = FALSE)
## same focusing on a smaller portion of the chromosome:
plot(info$POS, !SNP, "h", col = "red", xlim = lim, xlab = "Position",
ylab = "", yaxt = "n")
plot(info$POS, SNP, "h", col = "blue", xlim = lim, xlab = "Position",
ylab = "", yaxt = "n")
par(op)
## read both types of mutations separately:
X.SNP <- read.vcf("chrY.vcf.gz", which.loci = which(SNP))
X.other <- read.vcf("chrY.vcf.gz", which.loci = which(!SNP))
identical(rownames(X.SNP), VCFlabels("chrY.vcf.gz")) # TRUE
cat(VCFheader("chrY.vcf.gz"))
## get haplotypes for the first 10 loci:
h <- haplotype(X.SNP, 1:10)
## plot their frequencies:
op <- par(mar = c(3, 10, 1, 1))
par(op)
vx
summary(vx)
str(vx)
vcf <- fread("https://raw.githubusercontent.com/vcflib/vcflib/master/samples/sample.vcf")
library(data.table)
vcf <- fread("https://raw.githubusercontent.com/vcflib/vcflib/master/samples/sample.vcf")
vcf
vv <- data.table::fread("/Users/thijsjanzen/MEGAsync2/Daphnia/gal_long_fixed_5.recode.vcf")
vv
vv
str(vv)
vv <- data.table::fread("/Users/thijsjanzen/MEGAsync2/Daphnia/gal_long_fixed_5.recode.vcf", fill = TRUE)
vv
vv <- read_tsv("/Users/thijsjanzen/MEGAsync2/Daphnia/gal_long_fixed_5.recode.vcf"
)
vv <- readr::read_tsv("/Users/thijsjanzen/MEGAsync2/Daphnia/gal_long_fixed_5.recode.vcf")
vv
vx <- vcfR::read.vcfR("/Users/thijsjanzen/MEGAsync2/Daphnia/gal_long_fixed_5.recode.vcf")
vx
vx@gt
vx_gt <- vcfR::extract.gt(vx)
vx_gt
vcfR::extract_gt_tidy(vx)
vx_gt_tidy <- vcfR::vcfR2tidy(vx)
vx_gt_tidy
vx_gt_tidy %>%
filter(Indiv == "EIC_57")
4gt
vx_gt_tidy$gt %>%
filter(Indiv == "EIC_57")
vx_gt_tidy$gt
vx_gt_tidy$gt  %>% filter(Indiv == "EIC_57")
vv <- subset(vx_gt_tidy$gt, vx_gt_tidy$gt$Indiv == "EIC_57")
vv
ggplot(vv, aes(x = POS, y = gt_DP)) +
geom_point() +
facet_grid(rows=vars(ChromKey))
library(tidyverse)
ggplot(vv, aes(x = POS, y = gt_DP)) +
geom_point() +
facet_grid(rows=vars(ChromKey))
library(tidyverse)
cnt <- 1
all_plots <- list()
for (sample in unique(vx_gt_tidy$gt$Indiv)) {
px <- vx_gt_tidy$gt %>%
filter(Indiv == sample) %>%
ggplot(aes(x = POS, y  = gt_DP)) +
geom_point() +
facet_grid(rows = vars(ChromKey)) +
ggtitle(sample)
all_plots[[cnt]] <- px
cnt <- cnt + 1
}
pdf("/Users/thijsjanzen/read_depth.pdf", onefile = TRUE)
invisible(lapply(all_plots, print))
dev.off()
library(vcfR)
vx <- vcfR::read.vcfR("/Users/thijsjanzen/MEGAsync2/Daphnia/gal_long_fixed_5.recode.vcf")
vx_gt <- vcfR::extract.gt(vx)
vx_gt_tidy <- vcfR::vcfR2tidy(vx)
vv <- subset(vx_gt_tidy$gt, vx_gt_tidy$gt$Indiv == "EIC_57")
library(tidyverse)
cnt <- 1
all_plots <- list()
for (sample in unique(vx_gt_tidy$gt$Indiv)) {
px <- vx_gt_tidy$gt %>%
filter(Indiv == sample) %>%
ggplot(aes(x = POS, y  = gt_DP)) +
geom_step() +
facet_grid(rows = vars(ChromKey)) +
ggtitle(sample)
all_plots[[cnt]] <- px
cnt <- cnt + 1
}
pdf("/Users/thijsjanzen/read_depth.pdf", onefile = TRUE)
invisible(lapply(all_plots, print))
dev.off()
chrom <- vcfR::create.chromR(vx, name = "dgal1")
plot(chrom)
chromoqc(chrom)
my_genind <- vcfR2genind(vx)
library(pegas)
install.packages("pegas")
vx <- pegas::read.vcf("/Users/thijsjanzen/MEGAsync2/Daphnia/gal_long_fixed_5.recode.vcf")
vy <- pegas::VCFloci(file = "/Users/thijsjanzen/MEGAsync2/Daphnia/gal_long_fixed_5.recode.vcf")
vv <- readr::read_tsv("/Users/thijsjanzen/MEGAsync2/Daphnia/gal_long_fixed_5.recode.vcf")
install.packages("pegas")
library(vcfR)
vx <- vcfR::read.vcfR("/Users/thijsjanzen/MEGAsync2/Daphnia/gal_long_fixed_5.recode.vcf")
vx_gt_tidy <- vcfR::vcfR2tidy(vx)
vx_gt_tidy$gt
vx_gt_tidy$gt$gt_GT_alleles
library(vcfR)
vx <- vcfR::read.vcfR("/Users/thijsjanzen/MEGAsync2/Daphnia/gal_long_fixed_5.recode.vcf")
vx_gt_tidy <- vcfR::vcfR2tidy(vx)
cnt <- 1
all_plots <- list()
for (sample in unique(vx_gt_tidy$gt$Indiv)) {
sample <- unique(vx_gt_tidy$gt$Indiv)[[1]]
sample
vy <- subset(vx_gt_tidy$gt, vx_gt_tidy$gt$Indiv == sample)
to_plot <- matrix(nrow = length(vy$POS), ncol = 4)
for (i in 1:length(vy$POS) {
to_plot[i, 1] <- vy$POS[[i]]
AD <- vy$gt_AD
AD <- strsplit(AD, split = ",")
to_plot[i, 2] <- as.numeric(AD[[1]])
to_plot[i ,3] <- as.numeric(AD[[2]])
to_plot[i, 4] <- as.numeric(vy$ChromKey[i])
}
colnames(to_plot) <- c("pos", "gal", "long", "chrom")
to_plot <- as_tibble(to_plot)
to_plot$long <- -to_plot$long
px <- to_plot %>%
gather(key = "species", value = "reads", c(gal, long)) %>%
ggplot(aes(x = pos, y = reads, col = species)) +
geom_step() +
facet_grid(rows=vars(chrom))
all_plots[[cnt]] <- px
cnt <- cnt + 1
}
pdf("/Users/thijsjanzen/raw_reads2.pdf", onefile = TRUE)
invisible(lapply(all_plots, print))
dev.off()
cnt <- 1
all_plots <- list()
for (sample in unique(vx_gt_tidy$gt$Indiv) ) {
vy <- subset(vx_gt_tidy$gt, vx_gt_tidy$gt$Indiv == sample)
to_plot <- matrix(nrow = length(vy$POS), ncol = 4)
for (i in 1:length(vy$POS)) {
to_plot[i, 1] <- vy$POS[[i]]
AD <- vy$gt_AD
AD <- strsplit(AD, split = ",")
to_plot[i, 2] <- as.numeric(AD[[1]])
to_plot[i ,3] <- as.numeric(AD[[2]])
to_plot[i, 4] <- as.numeric(vy$ChromKey[i])
}
colnames(to_plot) <- c("pos", "gal", "long", "chrom")
to_plot <- as_tibble(to_plot)
to_plot$long <- -to_plot$long
px <- to_plot %>%
gather(key = "species", value = "reads", c(gal, long)) %>%
ggplot(aes(x = pos, y = reads, col = species)) +
geom_step() +
facet_grid(rows=vars(chrom))
all_plots[[cnt]] <- px
cnt <- cnt + 1
}
AD
vy <- subset(vx_gt_tidy$gt, vx_gt_tidy$gt$Indiv == sample)
vy
i <- 1
to_plot[i, 1] <- vy$POS[[i]]
AD <- vy$gt_AD[i]
AD <- strsplit(AD, split = ",")
AD
to_plot[i, 2] <- as.numeric(AD[[1]][1])
to_plot[i ,3] <- as.numeric(AD[[1]][2])
to_plot <- matrix(nrow = length(vy$POS), ncol = 4)
for (i in 1:length(vy$POS)) {
to_plot[i, 1] <- vy$POS[[i]]
AD <- vy$gt_AD[i]
AD <- strsplit(AD, split = ",")
to_plot[i, 2] <- as.numeric(AD[[1]][1])
to_plot[i ,3] <- as.numeric(AD[[1]][2])
to_plot[i, 4] <- as.numeric(vy$ChromKey[i])
}
cnt <- 1
all_plots <- list()
for (sample in unique(vx_gt_tidy$gt$Indiv) ) {
vy <- subset(vx_gt_tidy$gt, vx_gt_tidy$gt$Indiv == sample)
to_plot <- matrix(nrow = length(vy$POS), ncol = 4)
for (i in 1:length(vy$POS)) {
to_plot[i, 1] <- vy$POS[[i]]
AD <- vy$gt_AD[i]
AD <- strsplit(AD, split = ",")
to_plot[i, 2] <- as.numeric(AD[[1]][1])
to_plot[i ,3] <- as.numeric(AD[[1]][2])
to_plot[i, 4] <- as.numeric(vy$ChromKey[i])
}
colnames(to_plot) <- c("pos", "gal", "long", "chrom")
to_plot <- as_tibble(to_plot)
to_plot$long <- -to_plot$long
px <- to_plot %>%
gather(key = "species", value = "reads", c(gal, long)) %>%
ggplot(aes(x = pos, y = reads, col = species)) +
geom_step() +
facet_grid(rows=vars(chrom))
all_plots[[cnt]] <- px
cnt <- cnt + 1
}
pdf("/Users/thijsjanzen/raw_reads2.pdf", onefile = TRUE)
invisible(lapply(all_plots, print))
dev.off()
cnt <- 1
all_plots <- list()
for (sample in unique(vx_gt_tidy$gt$Indiv) ) {
vy <- subset(vx_gt_tidy$gt, vx_gt_tidy$gt$Indiv == sample)
to_plot <- matrix(nrow = length(vy$POS), ncol = 4)
for (i in 1:length(vy$POS)) {
to_plot[i, 1] <- vy$POS[[i]]
AD <- vy$gt_AD[i]
AD <- strsplit(AD, split = ",")
to_plot[i, 2] <- as.numeric(AD[[1]][1])
to_plot[i ,3] <- as.numeric(AD[[1]][2])
to_plot[i, 4] <- as.numeric(vy$ChromKey[i])
}
colnames(to_plot) <- c("pos", "gal", "long", "chrom")
to_plot <- as_tibble(to_plot)
to_plot$long <- -to_plot$long
px <- to_plot %>%
gather(key = "species", value = "reads", c(gal, long)) %>%
ggplot(aes(x = pos, y = reads, col = species)) +
geom_step() +
facet_grid(rows=vars(chrom)) +
ggtitle(sample)
all_plots[[cnt]] <- px
cnt <- cnt + 1
}
pdf("/Users/thijsjanzen/raw_reads2.pdf", onefile = TRUE)
invisible(lapply(all_plots, print))
dev.off()
cnt <- 1
all_plots <- list()
for (sample in unique(vx_gt_tidy$gt$Indiv) ) {
vy <- subset(vx_gt_tidy$gt, vx_gt_tidy$gt$Indiv == sample)
to_plot <- matrix(nrow = length(vy$POS), ncol = 4)
for (i in 1:length(vy$POS)) {
to_plot[i, 1] <- vy$POS[[i]]
AD <- vy$gt_AD[i]
AD <- strsplit(AD, split = ",")
to_plot[i, 2] <- as.numeric(AD[[1]][1])
to_plot[i ,3] <- as.numeric(AD[[1]][2])
to_plot[i, 4] <- as.numeric(vy$ChromKey[i])
}
colnames(to_plot) <- c("pos", "gal", "long", "chrom")
to_plot <- as_tibble(to_plot)
to_plot$long <- -to_plot$long
px <- to_plot %>%
gather(key = "species", value = "reads", c(gal, long)) %>%
ggplot(aes(x = pos, y = reads, col = species)) +
geom_step() +
facet_grid(rows=vars(chrom), scales = "free") +
ggtitle(sample)
all_plots[[cnt]] <- px
cnt <- cnt + 1
}
pdf("/Users/thijsjanzen/raw_reads2.pdf", onefile = TRUE)
invisible(lapply(all_plots, print))
dev.off()
library(tidyverse)
sample_names <- read_tsv("/Users/thijsjanzen/Dropbox/projects/Daphnia/sample_names.txt.txt",
col_names = FALSE)
age_estimates <- read_tsv("/Users/thijsjanzen/MEGAsync2/Daphnia/estimates_daphnia_joint.txt")
kb_per_cm <- 147.49
library(tidyverse)
vx <- read_tsv("/Users/thijsjanzen/Dropbox/projects/Daphnia/joint/anchmm_panel2.txt",
col_names = FALSE)
all_plots <- list()
for (hybrid in 1:42) {
hybrid_index <- c(8 + (hybrid - 1) * 2, 9 + (hybrid - 1) * 2)
for_analysis <- cbind(vx[, c(1:7, hybrid_index)])
colnames(for_analysis) <- c("scaffold", "pos", "a1", "a2", "a3", "a4", "relpos", "gal", "long")
for_analysis$long <- -for_analysis$long
sample_name <- sample_names$X1[[hybrid]]
px <- for_analysis %>%
gather(key = "hybrid", value = "reads", c(gal, long)) %>%
ggplot(aes(x = pos, y = reads, col =as.factor(hybrid))) +
geom_step() +
facet_grid(rows = vars(scaffold), scales = "free") +
xlab("position") +
ylab("# of reads") +
ggtitle(sample_name)
all_plots[[hybrid]] <- px
}
pdf("/Users/thijsjanzen/raw_reads3.pdf", onefile = TRUE)
invisible(lapply(all_plots, print))
dev.off()
library(tidyverse)
sample_names <- read_tsv("/Users/thijsjanzen/Dropbox/projects/Daphnia/sample_names.txt.txt",
col_names = FALSE)
age_estimates <- read_tsv("/Users/thijsjanzen/MEGAsync2/Daphnia/estimates_daphnia_joint.txt")
kb_per_cm <- 147.49
library(tidyverse)
vx <- read_tsv("/Users/thijsjanzen/Dropbox/projects/Daphnia/joint/anchmm_panel2.txt",
col_names = FALSE)
vx <- read_tsv("/Users/thijsjanzen/Dropbox/projects/Daphnia/Python_only_ancestry/anchmm_panel2.txt",
col_names = FALSE)
all_plots <- list()
for (hybrid in 1:42) {
hybrid_index <- c(8 + (hybrid - 1) * 2, 9 + (hybrid - 1) * 2)
for_analysis <- cbind(vx[, c(1:7, hybrid_index)])
colnames(for_analysis) <- c("scaffold", "pos", "a1", "a2", "a3", "a4", "relpos", "gal", "long")
for_analysis$long <- -for_analysis$long
sample_name <- sample_names$X1[[hybrid]]
px <- for_analysis %>%
gather(key = "hybrid", value = "reads", c(gal, long)) %>%
ggplot(aes(x = pos, y = reads, col =as.factor(hybrid))) +
geom_step() +
facet_grid(rows = vars(scaffold), scales = "free") +
xlab("position") +
ylab("# of reads") +
ggtitle(sample_name)
all_plots[[hybrid]] <- px
}
pdf("/Users/thijsjanzen/raw_reads3.pdf", onefile = TRUE)
invisible(lapply(all_plots, print))
dev.off()
library(tidyverse)
sample_names <- read_tsv("/Users/thijsjanzen/Dropbox/projects/Daphnia/sample_names.txt.txt",
col_names = FALSE)
age_estimates <- read_tsv("/Users/thijsjanzen/MEGAsync2/Daphnia/estimates_daphnia_joint.txt")
kb_per_cm <- 147.49
library(tidyverse)
vx <- read_tsv("/Users/thijsjanzen/Dropbox/projects/Daphnia/Python_only_ancestry/anchmm_panel2.txt",
col_names = FALSE)
all_plots <- list()
for (hybrid in 1:42) {
hybrid_index <- c(8 + (hybrid - 1) * 2, 9 + (hybrid - 1) * 2)
for_analysis <- cbind(vx[, c(1:7, hybrid_index)])
colnames(for_analysis) <- c("scaffold", "pos", "a1", "a2", "a3", "a4", "relpos", "gal", "long")
for_analysis$long <- -for_analysis$long
sample_name <- sample_names$X1[[hybrid]]
px <- for_analysis %>%
gather(key = "hybrid", value = "reads", c(gal, long)) %>%
ggplot(aes(x = pos, y = reads, col =as.factor(hybrid))) +
geom_step() +
facet_grid(rows = vars(scaffold), scales = "free") +
xlab("position") +
ylab("# of reads") +
ggtitle(sample_name)
all_plots[[hybrid]] <- px
}
pdf("/Users/thijsjanzen/raw_reads4.pdf", onefile = TRUE)
invisible(lapply(all_plots, print))
dev.off()
